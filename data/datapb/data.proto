syntax = "proto3";

package datapb;

service Data {
	// clients set shardID to -1
	rpc Append(stream Record) returns (stream Ack) {}
	rpc AppendOne(Record) returns (Ack) {}
	// replicas set proper shardID and localReplicaID
	rpc Replicate(stream Record) returns (stream Ack) {}
	// the servers don't need to know the sources of the following requests
	rpc Subscribe(GlobalSN) returns (stream Record) {}
	rpc FilterSubscribe(FilterGlobalSN) returns (stream Record) {}
	rpc FilterSubscribeDouble(FilterGlobalSN) returns (stream Record) {}
	rpc Trim(GlobalSN) returns (Ack) {}
	rpc Read(GlobalSN) returns (Record) {}
}

message Record {
	int32 clientID = 1;
	int32 clientSN = 2; // client sequence number
	int32 shardID = 3;
	int32 localReplicaID = 4;
	int32 viewID = 5;
	int64 globalSN = 6; // global sequence number
	string record = 7; 
    int32 numHoles = 8; // number of holes to replicate (if this is a hole)
    int64 globalSN1 = 9; // extra gsn field used for speculation confirmation
	int32 appenderID = 10;
	int32 recordID = 11; // For filtering
	repeated int64 missedRecords = 12; // For filtering
}

message Ack {
	int32 clientID = 1;
	int32 clientSN = 2; // client sequence number
	int32 shardID = 3;
	int32 localReplicaID = 4;
	int32 viewID = 5;
	int64 globalSN = 6; // global sequence number
}

message GlobalSN {
	int64 gSN = 1;
}

message FilterGlobalSN {
	int64 gSN = 1;
	int32 readerID = 2;
	int32 filterValue = 3;
}

message Empty {}
